{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/intel/Desktop/cursor%20Ai/Call%20optix%20or%20Dafolks/company_task/src/app/%28admin-group%29/admin-panel/login/page.js"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveLoginDetails } from '../slice/AdminSlice';\r\nimport { useRouter } from 'next/navigation';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\nimport baseUrl from \"@/config/api\";\r\n\r\nexport default function Login() {\r\n    // const baseUrl = process.env.NEXT_PUBLIC_BASE_URL ?? \"http://localhost:5000\";\r\n    console.log(\"baseUrl login page\", baseUrl);\r\n\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [isClient, setIsClient] = useState(false);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n\r\n    let loginData = useSelector((myAllState) => {\r\n        return myAllState.loginStore.adminDetails;\r\n    });\r\n\r\n    // No need to create admin user in localStorage since we're using API now\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setLoading(true);\r\n\r\n        try {\r\n            console.log('🔄 Attempting admin login to:', `${baseUrl}/api/backend/adminAuth/login`);\r\n            console.log('👤 Username:', username);\r\n            console.log('🔑 Password:', password ? '[HIDDEN]' : '[EMPTY]');\r\n            console.log('📤 Request payload:', { adminName: username, adminPassword: password });\r\n\r\n            // API call for admin login\r\n            const response = await axios.post(`${baseUrl}/api/backend/adminAuth/login`, {\r\n                adminName: username,\r\n                adminPassword: password\r\n            });\r\n\r\n            console.log('✅ Admin login response:', response.data);\r\n            console.log('📊 Response status:', response.status);\r\n            console.log('📋 Response headers:', response.headers);\r\n\r\n            // Check if login was successful\r\n            if (response.data.success === false) {\r\n                setError(response.data.message || \"Login failed. Please check your credentials.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            // Login successful\r\n            const adminData = {\r\n                _id: response.data.admin._id,\r\n                adminName: response.data.admin.adminName,\r\n                name: 'Admin User',\r\n                email: 'admin@admin.com',\r\n                role: \"admin\",\r\n                status: 'approved'\r\n            };\r\n\r\n            console.log(\"Login - Admin data to store:\", adminData);\r\n\r\n            // Clear any existing admin cookie first\r\n            document.cookie = \"admin=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n\r\n            dispatch(saveLoginDetails({ admin: adminData }));\r\n            console.log(\"Login - Redirecting to dashboard\");\r\n            router.push(\"/admin-panel/dashboard\");\r\n\r\n        } catch (error) {\r\n            console.error('❌ Admin login error:', error);\r\n\r\n            if (error.response) {\r\n                let errorMessage;\r\n\r\n                if (error.response.status === 401) {\r\n                    errorMessage = \"Invalid username or password. Please check your credentials.\";\r\n                } else if (error.response.status === 400) {\r\n                    errorMessage = \"Please provide both username and password.\";\r\n                } else {\r\n                    errorMessage = error.response.data?.message || \"Login failed. Please try again.\";\r\n                }\r\n\r\n                setError(errorMessage);\r\n                console.error('Server error:', error.response.data);\r\n            } else if (error.request) {\r\n                setError(\"Network error. Please check your connection and try again.\");\r\n                console.error('Network error:', error.request);\r\n            } else {\r\n                setError(\"Login failed. Please try again.\");\r\n                console.error('Other error:', error.message);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsClient(true);\r\n\r\n        // Clear any old admin data that doesn't have role\r\n        const adminData = document.cookie.split('; ').find(row => row.startsWith('admin='));\r\n        if (adminData) {\r\n            try {\r\n                const admin = JSON.parse(decodeURIComponent(adminData.split('=')[1]));\r\n                if (!admin.role) {\r\n                    console.log(\"Clearing old admin data without role\");\r\n                    document.cookie = \"admin=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Error parsing admin data, clearing cookie\");\r\n                document.cookie = \"admin=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isClient && loginData) {\r\n            // router.push(\"/admin-panel/dashboard\");\r\n        }\r\n    }, [isClient, loginData, router]);\r\n\r\n    // Don't render until client-side hydration is complete\r\n    if (!isClient) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n                <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n                    <div className=\"animate-pulse\">\r\n                        <div className=\"h-8 bg-gray-200 rounded mb-6\"></div>\r\n                        <div className=\"h-4 bg-gray-200 rounded mb-4\"></div>\r\n                        <div className=\"h-10 bg-gray-200 rounded mb-4\"></div>\r\n                        <div className=\"h-4 bg-gray-200 rounded mb-6\"></div>\r\n                        <div className=\"h-10 bg-gray-200 rounded\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\"\r\n            >\r\n                <h1 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Admin Panel Login</h1>\r\n\r\n                {error && (\r\n                    <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className=\"block text-gray-700 mb-2\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        className=\"w-full border rounded px-3 py-2\"\r\n                        required\r\n                        autoComplete=\"username\"\r\n                        disabled={loading}\r\n                        placeholder=\"admin\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                    <label className=\"block text-gray-700 mb-2\">Password</label>\r\n                    <div className=\"relative\">\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className=\"w-full border rounded px-3 py-2\"\r\n                            required\r\n                            autoComplete=\"current-password\"\r\n                            disabled={loading}\r\n                            placeholder=\"admin123\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className={`w-full text-white py-2 rounded transition ${loading\r\n                        ? 'bg-gray-400 cursor-not-allowed'\r\n                        : 'bg-blue-600 hover:bg-blue-700'\r\n                        }`}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? \"Logging in...\" : \"Login\"}\r\n                </button>\r\n\r\n                <div className=\"mt-4 text-center text-sm text-gray-600\">\r\n                    <p className=\"font-semibold mb-2\">Admin Credentials:</p>\r\n                    <p>Username: <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">admin</span></p>\r\n                    <p>Password: <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">admin123</span></p>\r\n                    <p className=\"text-xs text-gray-500 mt-2\">✅ Auto-created in database</p>\r\n                </div>\r\n\r\n                <Link href=\"/login\">\r\n\r\n                    <button\r\n\r\n                        className={`w-full my-[5px] mx-auto text-white py-2 rounded transition ${loading\r\n                            ? 'bg-gray-400 cursor-not-allowed'\r\n                            : 'bg-black hover:bg-gray-800'\r\n                            }`}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? \"Logging in...\" : \"website login\"}\r\n                    </button>\r\n\r\n\r\n                </Link>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}