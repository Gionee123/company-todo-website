{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/intel/Desktop/cursor%20Ai/Call%20optix%20or%20Dafolks/company_task/src/app/%28website-group%29/dashboard/page.js"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\nfunction isLoggedIn() {\r\n  if (typeof window === \"undefined\") return false;\r\n  return !!localStorage.getItem('currentUser');\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const router = useRouter();\r\n  const [todos, setTodos] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check authentication immediately\r\n    const checkAuth = () => {\r\n      if (!isLoggedIn()) {\r\n        router.replace('/login');\r\n        return;\r\n      }\r\n      setIsAuthenticated(true);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    // Small delay to ensure localStorage is available\r\n    const timer = setTimeout(checkAuth, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [router]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      const stored = JSON.parse(localStorage.getItem(\"Todolist\")) ?? [];\r\n      setTodos(stored);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const total = todos.length;\r\n  const completed = todos.filter(t => t.isStatus).length;\r\n  const incomplete = total - completed;\r\n\r\n  const notifyAdmin = (todo) => {\r\n    // Trigger a localStorage event for admin notification\r\n    localStorage.setItem('admin_notification', JSON.stringify({\r\n      type: 'todo_completed',\r\n      todo,\r\n      timestamp: Date.now(),\r\n    }));\r\n  };\r\n\r\n  const changeStatus = (index) => {\r\n    const allItems = [...todos];\r\n    allItems[index][\"isStatus\"] = !allItems[index][\"isStatus\"];\r\n    setTodos(allItems);\r\n    // If completed, notify admin\r\n    if (allItems[index][\"isStatus\"]) {\r\n      notifyAdmin(allItems[index]);\r\n    }\r\n  };\r\n\r\n  // Show loading while checking authentication\r\n  if (isLoading || !isAuthenticated) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center justify-center p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-indigo-700\">Welcome to Your Dashboard</h1>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6 mb-8\">\r\n        <div className=\"bg-white rounded-lg shadow p-5 flex flex-col items-center\">\r\n          <span className=\"text-2xl font-semibold text-blue-600\">{total}</span>\r\n          <span className=\"text-gray-500\">Total Todos</span>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow p-5 flex flex-col items-center\">\r\n          <span className=\"text-2xl font-semibold text-green-600\">{completed}</span>\r\n          <span className=\"text-gray-500\">Completed</span>\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow p-5 flex flex-col items-center\">\r\n          <span className=\"text-2xl font-semibold text-yellow-600\">{incomplete}</span>\r\n          <span className=\"text-gray-500\">Incomplete</span>\r\n        </div>\r\n      </div>\r\n      <Link href=\"/todos\" className=\"bg-indigo-600 text-white px-6 py-2 rounded shadow hover:bg-indigo-700 transition\">Go to Todo List</Link>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,SAAS;IACP,wCAAmC,OAAO;;;AAE5C;AAEe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mCAAmC;QACnC,MAAM,YAAY;YAChB,IAAI,CAAC,cAAc;gBACjB,OAAO,OAAO,CAAC;gBACf;YACF;YACA,mBAAmB;YACnB,aAAa;QACf;QAEA,kDAAkD;QAClD,MAAM,QAAQ,WAAW,WAAW;QACpC,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAO;IAEX,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,iBAAiB;YACnB,MAAM,SAAS,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,gBAAgB,EAAE;YACjE,SAAS;QACX;IACF,GAAG;QAAC;KAAgB;IAEpB,MAAM,QAAQ,MAAM,MAAM;IAC1B,MAAM,YAAY,MAAM,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,EAAE,MAAM;IACtD,MAAM,aAAa,QAAQ;IAE3B,MAAM,cAAc,CAAC;QACnB,sDAAsD;QACtD,aAAa,OAAO,CAAC,sBAAsB,KAAK,SAAS,CAAC;YACxD,MAAM;YACN;YACA,WAAW,KAAK,GAAG;QACrB;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,WAAW;eAAI;SAAM;QAC3B,QAAQ,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW;QAC1D,SAAS;QACT,6BAA6B;QAC7B,IAAI,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE;YAC/B,YAAY,QAAQ,CAAC,MAAM;QAC7B;IACF;IAEA,6CAA6C;IAC7C,IAAI,aAAa,CAAC,iBAAiB;QACjC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0C;;;;;;0BACxD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAwC;;;;;;0CACxD,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;;;;;;;kCAElC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAyC;;;;;;0CACzD,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;;;;;;;kCAElC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAA0C;;;;;;0CAC1D,8OAAC;gCAAK,WAAU;0CAAgB;;;;;;;;;;;;;;;;;;0BAGpC,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;gBAAS,WAAU;0BAAmF;;;;;;;;;;;;AAGvH","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/intel/Desktop/cursor%20Ai/Call%20optix%20or%20Dafolks/company_task/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}