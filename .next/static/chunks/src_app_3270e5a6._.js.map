{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/intel/Desktop/cursor%20Ai/Call%20optix%20or%20Dafolks/company_task/src/app/compontent/common/admin/AdminRouteGuard.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function AdminRouteGuard({ children }) {\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    const adminData = Cookies.get(\"admin\");\r\n    console.log(\"AdminRouteGuard - adminData:\", adminData);\r\n\r\n    if (!adminData) {\r\n      console.log(\r\n        \"AdminRouteGuard - No admin data found, redirecting to login\"\r\n      );\r\n      router.replace(\"/admin-panel/login\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const admin = JSON.parse(adminData);\r\n      console.log(\"AdminRouteGuard - Parsed admin:\", admin);\r\n\r\n      if (!admin || !admin.role || admin.role !== \"admin\") {\r\n        console.log(\r\n          \"AdminRouteGuard - Invalid admin role, redirecting to login\"\r\n        );\r\n        router.replace(\"/admin-panel/login\");\r\n      } else {\r\n        console.log(\"AdminRouteGuard - Admin authenticated successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"AdminRouteGuard - Error parsing admin data:\", error);\r\n      router.replace(\"/admin-panel/login\");\r\n    }\r\n  }, [router]);\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEe,SAAS,gBAAgB,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IACtC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,YAAY,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;YAC9B,QAAQ,GAAG,CAAC,gCAAgC;YAE5C,IAAI,CAAC,WAAW;gBACd,QAAQ,GAAG,CACT;gBAEF,OAAO,OAAO,CAAC;gBACf;YACF;YAEA,IAAI;gBACF,MAAM,QAAQ,KAAK,KAAK,CAAC;gBACzB,QAAQ,GAAG,CAAC,mCAAmC;gBAE/C,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,MAAM,IAAI,KAAK,SAAS;oBACnD,QAAQ,GAAG,CACT;oBAEF,OAAO,OAAO,CAAC;gBACjB,OAAO;oBACL,QAAQ,GAAG,CAAC;gBACd;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,GAAG,CAAC,+CAA+C;gBAC3D,OAAO,OAAO,CAAC;YACjB;QACF;oCAAG;QAAC;KAAO;IACX,qBAAO;kBAAG;;AACZ;GAhCwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/intel/Desktop/cursor%20Ai/Call%20optix%20or%20Dafolks/company_task/src/app/%28admin-group%29/admin-panel/todos/page.js"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport AdminRouteGuard from '@/app/compontent/common/admin/AdminRouteGuard';\r\n\r\nexport default function AdminTodos() {\r\n  const [allTodos, setAllTodos] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [debugInfo, setDebugInfo] = useState('');\r\n\r\n  // Function to clean up old tasks without proper user data\r\n  const cleanupOldTasks = () => {\r\n    const todos = JSON.parse(localStorage.getItem('Todolist')) || [];\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\r\n\r\n    // Debug info\r\n    setDebugInfo(`Found ${todos.length} total tasks and ${registeredUsers.length} registered users`);\r\n\r\n    // Filter out tasks that don't have proper user data\r\n    const validTodos = todos.filter(todo => {\r\n      // Keep tasks that have userId and userName\r\n      if (todo.userId && todo.userName) {\r\n        return true;\r\n      }\r\n\r\n      // Keep tasks that can be linked to a registered user by email\r\n      if (todo.userEmail) {\r\n        const user = registeredUsers.find(u => u.email === todo.userEmail);\r\n        return user !== undefined;\r\n      }\r\n\r\n      // Remove tasks without proper user data\r\n      return false;\r\n    });\r\n\r\n    // Update localStorage with only valid tasks\r\n    localStorage.setItem('Todolist', JSON.stringify(validTodos));\r\n    return validTodos;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Clean up old tasks first\r\n    const cleanedTodos = cleanupOldTasks();\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\r\n\r\n    // Clean up tasks that don't have proper user data\r\n    const finalTodos = cleanedTodos.map(todo => {\r\n      if (!todo.userId || !todo.userName) {\r\n        // Try to find user by email if userId is missing\r\n        const user = registeredUsers.find(u => u.email === todo.userEmail);\r\n        if (user) {\r\n          return {\r\n            ...todo,\r\n            userId: user._id,\r\n            userName: user.name,\r\n            userEmail: user.email\r\n          };\r\n        }\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setAllTodos(finalTodos);\r\n    setUsers(registeredUsers);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Calculate statistics\r\n  const totalTasks = allTodos.length;\r\n  const completedTasks = allTodos.filter(todo => todo.isCompleted).length;\r\n  const incompleteTasks = totalTasks - completedTasks;\r\n  const completionRate = totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;\r\n\r\n  // Get tasks by status\r\n  const getTasksByStatus = (status) => {\r\n    return allTodos.filter(todo => status === 'completed' ? todo.isCompleted : !todo.isCompleted);\r\n  };\r\n\r\n  // Get recent tasks\r\n  const getRecentTasks = (count = 10) => {\r\n    return allTodos\r\n      .sort((a, b) => new Date(b.createdAt || 0) - new Date(a.createdAt || 0))\r\n      .slice(0, count);\r\n  };\r\n\r\n  // Group tasks by user with better user data handling\r\n  const getTasksByUser = () => {\r\n    const userTasks = {};\r\n\r\n    allTodos.forEach(todo => {\r\n      let userId = todo.userId;\r\n      let userName = todo.userName;\r\n      let userEmail = todo.userEmail;\r\n\r\n      // If user data is missing, try to find it from registered users\r\n      if (!userId || !userName) {\r\n        const user = users.find(u => u.email === todo.userEmail || u._id === todo.userId);\r\n        if (user) {\r\n          userId = user._id;\r\n          userName = user.name;\r\n          userEmail = user.email;\r\n        } else {\r\n          // Skip tasks that can't be properly linked to a user\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (!userTasks[userId]) {\r\n        userTasks[userId] = {\r\n          userName: userName,\r\n          userEmail: userEmail,\r\n          tasks: [],\r\n          completed: 0,\r\n          incomplete: 0\r\n        };\r\n      }\r\n\r\n      userTasks[userId].tasks.push(todo);\r\n      if (todo.isCompleted) {\r\n        userTasks[userId].completed++;\r\n      } else {\r\n        userTasks[userId].incomplete++;\r\n      }\r\n    });\r\n\r\n    return userTasks;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <AdminRouteGuard>\r\n        <div className=\"min-h-screen bg-gray-50 p-6 flex items-center justify-center\">\r\n          <div className=\"text-xl\">Loading task statistics...</div>\r\n        </div>\r\n      </AdminRouteGuard>\r\n    );\r\n  }\r\n\r\n  const userTasks = getTasksByUser();\r\n\r\n  return (\r\n    <AdminRouteGuard>\r\n      <div className=\"min-h-screen bg-gray-50 p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">Client Task Management</h1>\r\n\r\n          {/* Debug Info */}\r\n          {debugInfo && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\r\n              <p className=\"text-blue-800 text-sm\">{debugInfo}</p>\r\n              <p className=\"text-blue-600 text-xs mt-1\">\r\n                Total tasks: {totalTasks} | Registered users: {users.length} | Client groups: {Object.keys(userTasks).length}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Statistics Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <p className=\"text-sm font-medium text-gray-600\">Total Tasks</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{totalTasks}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <p className=\"text-sm font-medium text-gray-600\">Completed</p>\r\n                  <p className=\"text-2xl font-bold text-green-600\">{completedTasks}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-2 bg-yellow-100 rounded-lg\">\r\n                  <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <p className=\"text-sm font-medium text-gray-600\">Incomplete</p>\r\n                  <p className=\"text-2xl font-bold text-yellow-600\">{incompleteTasks}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <p className=\"text-sm font-medium text-gray-600\">Completion Rate</p>\r\n                  <p className=\"text-2xl font-bold text-purple-600\">{completionRate}%</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n            <h2 className=\"text-lg font-semibold mb-4 text-gray-800\">Overall Progress</h2>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n              <div\r\n                className=\"bg-gradient-to-r from-green-400 to-green-600 h-4 rounded-full transition-all duration-500\"\r\n                style={{ width: `${completionRate}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"flex justify-between text-sm text-gray-600 mt-2\">\r\n              <span>{completedTasks} completed</span>\r\n              <span>{incompleteTasks} remaining</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tasks by User */}\r\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h2 className=\"text-lg font-semibold text-gray-800\">Tasks by Client</h2>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Client Name\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Email\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Total Tasks\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Completed\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Incomplete\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Completion Rate\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {Object.entries(userTasks).map(([userId, userData]) => {\r\n                    const userCompletionRate = userData.tasks.length > 0\r\n                      ? Math.round((userData.completed / userData.tasks.length) * 100)\r\n                      : 0;\r\n\r\n                    return (\r\n                      <tr key={userId} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center mr-3\">\r\n                              <span className=\"text-indigo-600 font-semibold text-sm\">\r\n                                {userData.userName.charAt(0).toUpperCase()}\r\n                              </span>\r\n                            </div>\r\n                            <span className=\"text-sm font-medium text-gray-900\">{userData.userName}</span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {userData.userEmail}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                          {userData.tasks.length}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\r\n                            {userData.completed}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-yellow-100 text-yellow-800\">\r\n                            {userData.incomplete}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\r\n                              <div\r\n                                className=\"bg-green-500 h-2 rounded-full\"\r\n                                style={{ width: `${userCompletionRate}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-sm text-gray-900\">{userCompletionRate}%</span>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {Object.keys(userTasks).length === 0 && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <p className=\"text-lg mb-2\">No client tasks found</p>\r\n                <p className=\"text-sm\">Clients haven&apos;t created any tasks yet</p>\r\n                <div className=\"mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-yellow-800 text-sm\">\r\n                    💡 To see client tasks: Register a user, login, and create some tasks\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Recent Tasks */}\r\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h2 className=\"text-lg font-semibold text-gray-800\">Recent Tasks</h2>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Client\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Task\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Due Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Created\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {getRecentTasks().map((todo, index) => {\r\n                    // Get proper user name for display\r\n                    let displayName = todo.userName;\r\n                    let displayEmail = todo.userEmail;\r\n\r\n                    if (!displayName) {\r\n                      const user = users.find(u => u.email === todo.userEmail || u._id === todo.userId);\r\n                      if (user) {\r\n                        displayName = user.name;\r\n                        displayEmail = user.email;\r\n                      } else {\r\n                        displayName = 'Unknown User';\r\n                        displayEmail = todo.userEmail || 'unknown@email.com';\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <tr key={index} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"w-6 h-6 bg-indigo-100 rounded-full flex items-center justify-center mr-2\">\r\n                              <span className=\"text-indigo-600 font-semibold text-xs\">\r\n                                {displayName.charAt(0).toUpperCase()}\r\n                              </span>\r\n                            </div>\r\n                            <div>\r\n                              <span className=\"text-sm font-medium text-gray-900\">{displayName}</span>\r\n                              <p className=\"text-xs text-gray-500\">{displayEmail}</p>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className={`w-3 h-3 rounded-full mr-3 ${todo.isCompleted ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\r\n                            <span className={`text-sm ${todo.isCompleted ? 'line-through text-gray-500' : 'text-gray-900'}`}>\r\n                              {todo.Todolist}\r\n                            </span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${todo.isCompleted\r\n                            ? 'bg-green-100 text-green-800'\r\n                            : 'bg-yellow-100 text-yellow-800'\r\n                            }`}>\r\n                            {todo.isCompleted ? 'Completed' : 'Incomplete'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {todo.dueDate ? new Date(todo.dueDate).toLocaleDateString() : 'No due date'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {todo.createdAt ? new Date(todo.createdAt).toLocaleDateString() : 'Unknown'}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {allTodos.length === 0 && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <p className=\"text-lg mb-2\">No tasks found</p>\r\n                <p className=\"text-sm\">Clients haven&apos;t created any tasks yet</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AdminRouteGuard>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,0DAA0D;IAC1D,MAAM,kBAAkB;QACtB,MAAM,QAAQ,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,gBAAgB,EAAE;QAChE,MAAM,kBAAkB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,uBAAuB,EAAE;QAEjF,aAAa;QACb,aAAa,AAAC,SAAwC,OAAhC,MAAM,MAAM,EAAC,qBAA0C,OAAvB,gBAAgB,MAAM,EAAC;QAE7E,oDAAoD;QACpD,MAAM,aAAa,MAAM,MAAM,CAAC,CAAA;YAC9B,2CAA2C;YAC3C,IAAI,KAAK,MAAM,IAAI,KAAK,QAAQ,EAAE;gBAChC,OAAO;YACT;YAEA,8DAA8D;YAC9D,IAAI,KAAK,SAAS,EAAE;gBAClB,MAAM,OAAO,gBAAgB,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,KAAK,SAAS;gBACjE,OAAO,SAAS;YAClB;YAEA,wCAAwC;YACxC,OAAO;QACT;QAEA,4CAA4C;QAC5C,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;QAChD,OAAO;IACT;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,2BAA2B;YAC3B,MAAM,eAAe;YACrB,MAAM,kBAAkB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,uBAAuB,EAAE;YAEjF,kDAAkD;YAClD,MAAM,aAAa,aAAa,GAAG;mDAAC,CAAA;oBAClC,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,QAAQ,EAAE;wBAClC,iDAAiD;wBACjD,MAAM,OAAO,gBAAgB,IAAI;oEAAC,CAAA,IAAK,EAAE,KAAK,KAAK,KAAK,SAAS;;wBACjE,IAAI,MAAM;4BACR,OAAO;gCACL,GAAG,IAAI;gCACP,QAAQ,KAAK,GAAG;gCAChB,UAAU,KAAK,IAAI;gCACnB,WAAW,KAAK,KAAK;4BACvB;wBACF;oBACF;oBACA,OAAO;gBACT;;YAEA,YAAY;YACZ,SAAS;YACT,WAAW;QACb;+BAAG,EAAE;IAEL,uBAAuB;IACvB,MAAM,aAAa,SAAS,MAAM;IAClC,MAAM,iBAAiB,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,WAAW,EAAE,MAAM;IACvE,MAAM,kBAAkB,aAAa;IACrC,MAAM,iBAAiB,aAAa,IAAI,KAAK,KAAK,CAAC,AAAC,iBAAiB,aAAc,OAAO;IAE1F,sBAAsB;IACtB,MAAM,mBAAmB,CAAC;QACxB,OAAO,SAAS,MAAM,CAAC,CAAA,OAAQ,WAAW,cAAc,KAAK,WAAW,GAAG,CAAC,KAAK,WAAW;IAC9F;IAEA,mBAAmB;IACnB,MAAM,iBAAiB;YAAC,yEAAQ;QAC9B,OAAO,SACJ,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,IAAI,KAAK,IAAI,KAAK,EAAE,SAAS,IAAI,IACpE,KAAK,CAAC,GAAG;IACd;IAEA,qDAAqD;IACrD,MAAM,iBAAiB;QACrB,MAAM,YAAY,CAAC;QAEnB,SAAS,OAAO,CAAC,CAAA;YACf,IAAI,SAAS,KAAK,MAAM;YACxB,IAAI,WAAW,KAAK,QAAQ;YAC5B,IAAI,YAAY,KAAK,SAAS;YAE9B,gEAAgE;YAChE,IAAI,CAAC,UAAU,CAAC,UAAU;gBACxB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,KAAK,SAAS,IAAI,EAAE,GAAG,KAAK,KAAK,MAAM;gBAChF,IAAI,MAAM;oBACR,SAAS,KAAK,GAAG;oBACjB,WAAW,KAAK,IAAI;oBACpB,YAAY,KAAK,KAAK;gBACxB,OAAO;oBACL,qDAAqD;oBACrD;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACtB,SAAS,CAAC,OAAO,GAAG;oBAClB,UAAU;oBACV,WAAW;oBACX,OAAO,EAAE;oBACT,WAAW;oBACX,YAAY;gBACd;YACF;YAEA,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;YAC7B,IAAI,KAAK,WAAW,EAAE;gBACpB,SAAS,CAAC,OAAO,CAAC,SAAS;YAC7B,OAAO;gBACL,SAAS,CAAC,OAAO,CAAC,UAAU;YAC9B;QACF;QAEA,OAAO;IACT;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC,kKAAA,CAAA,UAAe;sBACd,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BAAU;;;;;;;;;;;;;;;;IAIjC;IAEA,MAAM,YAAY;IAElB,qBACE,6LAAC,kKAAA,CAAA,UAAe;kBACd,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;oBAGrD,2BACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;0CAAyB;;;;;;0CACtC,6LAAC;gCAAE,WAAU;;oCAA6B;oCAC1B;oCAAW;oCAAsB,MAAM,MAAM;oCAAC;oCAAmB,OAAO,IAAI,CAAC,WAAW,MAAM;;;;;;;;;;;;;kCAMlH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;gDAAwB,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DAC/E,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;sDAGzE,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAoC;;;;;;8DACjD,6LAAC;oDAAE,WAAU;8DAAoC;;;;;;;;;;;;;;;;;;;;;;;0CAKvD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;gDAAyB,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DAChF,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;sDAGzE,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAoC;;;;;;8DACjD,6LAAC;oDAAE,WAAU;8DAAqC;;;;;;;;;;;;;;;;;;;;;;;0CAKxD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;gDAA0B,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjF,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;sDAGzE,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAoC;;;;;;8DACjD,6LAAC;oDAAE,WAAU;8DAAsC;;;;;;;;;;;;;;;;;;;;;;;0CAKzD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;gDAA0B,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjF,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;sDAGzE,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAoC;;;;;;8DACjD,6LAAC;oDAAE,WAAU;;wDAAsC;wDAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO1E,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,AAAC,GAAiB,OAAf,gBAAe;oCAAG;;;;;;;;;;;0CAGzC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;4CAAM;4CAAe;;;;;;;kDACtB,6LAAC;;4CAAM;4CAAgB;;;;;;;;;;;;;;;;;;;kCAK3B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAG,WAAU;8CAAsC;;;;;;;;;;;0CAEtD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAM,WAAU;;sDACf,6LAAC;4CAAM,WAAU;sDACf,cAAA,6LAAC;;kEACC,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;;;;;;;;;;;;sDAKnG,6LAAC;4CAAM,WAAU;sDACd,OAAO,OAAO,CAAC,WAAW,GAAG,CAAC;oDAAC,CAAC,QAAQ,SAAS;gDAChD,MAAM,qBAAqB,SAAS,KAAK,CAAC,MAAM,GAAG,IAC/C,KAAK,KAAK,CAAC,AAAC,SAAS,SAAS,GAAG,SAAS,KAAK,CAAC,MAAM,GAAI,OAC1D;gDAEJ,qBACE,6LAAC;oDAAgB,WAAU;;sEACzB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC;4EAAK,WAAU;sFACb,SAAS,QAAQ,CAAC,MAAM,CAAC,GAAG,WAAW;;;;;;;;;;;kFAG5C,6LAAC;wEAAK,WAAU;kFAAqC,SAAS,QAAQ;;;;;;;;;;;;;;;;;sEAG1E,6LAAC;4DAAG,WAAU;sEACX,SAAS,SAAS;;;;;;sEAErB,6LAAC;4DAAG,WAAU;sEACX,SAAS,KAAK,CAAC,MAAM;;;;;;sEAExB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAK,WAAU;0EACb,SAAS,SAAS;;;;;;;;;;;sEAGvB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAK,WAAU;0EACb,SAAS,UAAU;;;;;;;;;;;sEAGxB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC;4EACC,WAAU;4EACV,OAAO;gFAAE,OAAO,AAAC,GAAqB,OAAnB,oBAAmB;4EAAG;;;;;;;;;;;kFAG7C,6LAAC;wEAAK,WAAU;;4EAAyB;4EAAmB;;;;;;;;;;;;;;;;;;;mDAnCzD;;;;;4CAwCb;;;;;;;;;;;;;;;;;4BAKL,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK,mBACjC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAe;;;;;;kDAC5B,6LAAC;wCAAE,WAAU;kDAAU;;;;;;kDACvB,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAE,WAAU;sDAA0B;;;;;;;;;;;;;;;;;;;;;;;kCAS/C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAG,WAAU;8CAAsC;;;;;;;;;;;0CAEtD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAM,WAAU;;sDACf,6LAAC;4CAAM,WAAU;sDACf,cAAA,6LAAC;;kEACC,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;kEAG/F,6LAAC;wDAAG,WAAU;kEAAiF;;;;;;;;;;;;;;;;;sDAKnG,6LAAC;4CAAM,WAAU;sDACd,iBAAiB,GAAG,CAAC,CAAC,MAAM;gDAC3B,mCAAmC;gDACnC,IAAI,cAAc,KAAK,QAAQ;gDAC/B,IAAI,eAAe,KAAK,SAAS;gDAEjC,IAAI,CAAC,aAAa;oDAChB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,KAAK,SAAS,IAAI,EAAE,GAAG,KAAK,KAAK,MAAM;oDAChF,IAAI,MAAM;wDACR,cAAc,KAAK,IAAI;wDACvB,eAAe,KAAK,KAAK;oDAC3B,OAAO;wDACL,cAAc;wDACd,eAAe,KAAK,SAAS,IAAI;oDACnC;gDACF;gDAEA,qBACE,6LAAC;oDAAe,WAAU;;sEACxB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC;4EAAK,WAAU;sFACb,YAAY,MAAM,CAAC,GAAG,WAAW;;;;;;;;;;;kFAGtC,6LAAC;;0FACC,6LAAC;gFAAK,WAAU;0FAAqC;;;;;;0FACrD,6LAAC;gFAAE,WAAU;0FAAyB;;;;;;;;;;;;;;;;;;;;;;;sEAI5C,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAW,AAAC,6BAAgF,OAApD,KAAK,WAAW,GAAG,iBAAiB;;;;;;kFACjF,6LAAC;wEAAK,WAAW,AAAC,WAA4E,OAAlE,KAAK,WAAW,GAAG,+BAA+B;kFAC3E,KAAK,QAAQ;;;;;;;;;;;;;;;;;sEAIpB,6LAAC;4DAAG,WAAU;sEACZ,cAAA,6LAAC;gEAAK,WAAW,AAAC,4DAGf,OAH0E,KAAK,WAAW,GACzF,gCACA;0EAED,KAAK,WAAW,GAAG,cAAc;;;;;;;;;;;sEAGtC,6LAAC;4DAAG,WAAU;sEACX,KAAK,OAAO,GAAG,IAAI,KAAK,KAAK,OAAO,EAAE,kBAAkB,KAAK;;;;;;sEAEhE,6LAAC;4DAAG,WAAU;sEACX,KAAK,SAAS,GAAG,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB,KAAK;;;;;;;mDAlC7D;;;;;4CAsCb;;;;;;;;;;;;;;;;;4BAKL,SAAS,MAAM,KAAK,mBACnB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAe;;;;;;kDAC5B,6LAAC;wCAAE,WAAU;kDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQvC;GAlawB;KAAA","debugId":null}}]
}